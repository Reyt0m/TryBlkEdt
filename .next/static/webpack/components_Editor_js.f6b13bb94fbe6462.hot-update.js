"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_Editor_js",{

/***/ "./plugins/nestTune.js":
/*!*****************************!*\
  !*** ./plugins/nestTune.js ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * Build styles\n */ \n(__webpack_require__(/*! ../styles/plugins.module.scss */ \"./styles/plugins.module.scss\").toString)();\n/**\n * node 作成用\n * @param tagName\n * @param classNames\n * @param attributes\n * @returns {*}\n */ function make(tagName) {\n    let classNames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, attributes = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    const el = document.createElement(tagName);\n    if (Array.isArray(classNames)) {\n        el.classList.add(...classNames);\n    } else if (classNames) {\n        el.classList.add(classNames);\n    }\n    for(const attrName in attributes){\n        el[attrName] = attributes[attrName];\n    }\n    return el;\n}\nclass AlignmentBlockTune {\n    /**\n   * Default alignment\n   *\n   * @public\n   * @returns {string}\n   */ static get DEFAULT_ALIGNMENT() {\n        return \"left\";\n    }\n    static get isTune() {\n        return true;\n    }\n    getAlignment() {\n        var ref, ref1;\n        if (!!((ref = this.settings) === null || ref === void 0 ? void 0 : ref.blocks) && this.settings.blocks.hasOwnProperty(this.block.name)) {\n            return this.settings.blocks[this.block.name];\n        }\n        if (!!((ref1 = this.settings) === null || ref1 === void 0 ? void 0 : ref1.default)) {\n            return this.settings.default;\n        }\n        return AlignmentBlockTune.DEFAULT_ALIGNMENT;\n    }\n    /**\n   * block自体をwrapしてくれる\n   * constructorで与えられたalignmentを代入しようとすると、holderが確定してなく\n   * renderでやろうとすると、tuneを表示時に処理が走る\n   * @param blockContent\n   */ wrap(blockContent) {\n        this.wrapper = make(\"div\");\n        this.wrapper.classList.toggle(this._CSS.alignment[this.data.alignment]);\n        this.wrapper.append(blockContent);\n        return this.wrapper;\n    }\n    /**\n   * rendering block tune\n   * @returns {*}\n   */ render() {\n        const wrapper = make(\"div\");\n        const count = 1;\n        this.count = 0;\n        this.nestIcons.map((align)=>{\n            const button = document.createElement(\"button\");\n            button.classList.add(this.api.styles.settingsButton);\n            button.innerHTML = align.icon;\n            button.type = \"button\";\n            button.classList.toggle(this.api.styles.settingsButtonActive, align.name === this.data.alignment);\n            wrapper.appendChild(button);\n            return button;\n        }).forEach((element)=>{\n            element.addEventListener(\"click\", ()=>{\n                console.log(this.wrapper);\n                if (this.count > 0 && element.innerText === this.nestIcons[0].name) {\n                    this.count = this.count - count;\n                } else if (this.count < 5 && element.innerText === this.nestIcons[1].name) {\n                    this.count = this.count + count;\n                }\n                this.data = {\n                    alignment: this.nestSettings[this.count].name\n                };\n                const { name  } = this.nestSettings[this.count];\n                this.wrapper.className = \"\";\n                this.wrapper.classList.toggle(this._CSS.alignment[name], name === this.data.alignment);\n            });\n        });\n        return wrapper;\n    }\n    /**\n   * save\n   * @returns {*}\n   */ save() {\n        return this.data;\n    }\n    /**\n   *\n   * @param api\n   * @param data 既に設定されているデータ\n   * @param settings tuneに設定項目\n   * @param block tuneに設定されてるblock\n   */ constructor({ api , data , config , block  }){\n        this.api = api;\n        this.block = block;\n        /**\n         config:{\n            default: \"right\",\n            blocks: {\n              header: 'center',\n              list: 'right'\n            }\n          },\n         */ this.settings = config;\n        this.data = data || {\n            alignment: this.getAlignment()\n        };\n        this.nestIcons = [\n            {\n                name: \"previous\",\n                icon: \"previous\"\n            },\n            {\n                name: \"next\",\n                icon: \"next\"\n            }\n        ];\n        this.nestSettings = [\n            {\n                name: \"1\",\n                icon: \"1\"\n            },\n            {\n                name: \"2\",\n                icon: \"2\"\n            },\n            {\n                name: \"3\",\n                icon: \"3\"\n            },\n            {\n                name: \"4\",\n                icon: \"4\"\n            },\n            {\n                name: \"5\",\n                icon: \"5\"\n            },\n            {\n                name: \"6\",\n                icon: \"6\"\n            }\n        ];\n        this._CSS = {\n            alignment: {\n                1: \"cdx-nest-1\",\n                2: \"cdx-nest-2\",\n                3: \"cdx-nest-3\",\n                4: \"cdx-nest-4\",\n                5: \"cdx-nest-5\",\n                6: \"cdx-nest-6\"\n            }\n        };\n    }\n}\nmodule.exports = AlignmentBlockTune;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/nestTune.js\n"));

/***/ })

});